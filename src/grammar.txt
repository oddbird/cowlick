tag
  = statement_tag / expression_tag / comment_tag

statement_tag
  = '{%' ws? block:(if / elif / else / endif) ws? '%}' {
    return block;
  }

if
  = 'if' ws expression:expression {
    return {
      node: 'if',
      condition: expression,
      block: [],
      else: null
    }
  }
elif
  = 'elif' ws expression:expression {
    return {
      node: 'elif',
      condition: expression,
      block: [],
      else: null
    };
  }
else
  = 'else' {
    return {
      node: 'else',
      block: []
    };
  }
endif
  = 'endif' {
    return {
      node: 'endif'
    };
  }

expression_tag
  = '{{' ws? expression:expression ws? '}}' {
    return {
      node: 'expression',
      body: expression
    };
  }

expression
  = literal / variable

literal
  = boolean / string / float

boolean
  = value:('True' / 'False' / 'true' / 'false') {
    return {
      node: 'boolean',
      value: (value.toLowerCase() == 'true')
    };
  }

string
  = sq_string / dq_string

dq_string
  = '"' value:([^"]+) '"' {
    return {
      node: 'string',
      value: value.join('')
    };
  }

sq_string
  = "'" value:([^']+) "'" {
    return {
      node: 'string',
      value: value.join('')
    };
  }

float
  = value:([0-9.]+) {
    return {
      node: 'float',
      value: parseFloat(value.join(''))
    };
  }

variable
  = name:identifier {
    return {
      node: 'variable',
      name: name
    }
  }

identifier
  = name:([a-zA-Z][a-zA-Z0-9_]*) {
    return name[0] + name[1].join('');
  }

ws
  = [\n ]+

comment_tag
  = '{#' ws? comment:(!(ws? '#}') .)* ws? '#}' {
    return {
      node: 'comment',
      value: comment.map(function(x) { return x[1]; }).join('')
    }
  }
